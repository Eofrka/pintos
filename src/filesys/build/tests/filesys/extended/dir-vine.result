FAIL
Kernel panic in run: PANIC at ../../userprog/syscall.c:254 in syscall_open(): not enough memory to allocate struct file_descriptor_table_entry
Call stack: 0xc0107a0c 0xc010bdf2 0xc010c2d5 0xc0101e4d 0xc0101f7f 0x804a711 0x80482b8 0x8048d24 0x8048d58
Translation of call stack:
In kernel.o:
0xc0107a0c: debug_panic (.../../lib/kernel/debug.c:34)
0xc010bdf2: syscall_open (...../userprog/syscall.c:251)
0xc010c2d5: syscall_handler (...../userprog/syscall.c:943)
0xc0101e4d: intr_handler (..../threads/interrupt.c:361)
0xc0101f7f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/extended/dir-vine:
0x0804a711: open (...../lib/user/syscall.c:105)
0x080482b8: test_main (...ys/extended/dir-vine.c:55)
0x08048d24: main (...ild/../../tests/main.c:13)
0x08048d58: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
